{"ast":null,"code":"import * as THREE from 'three';\nimport { useRef, useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport Hls from 'hls.js';\nfunction useVideoTexture(src, props) {\n  const {\n    unsuspend,\n    start,\n    crossOrigin,\n    muted,\n    loop,\n    hls,\n    ...rest\n  } = {\n    unsuspend: 'loadedmetadata',\n    crossOrigin: 'Anonymous',\n    muted: true,\n    loop: true,\n    start: true,\n    playsInline: true,\n    hls: {},\n    ...props\n  };\n  const url = new URL(typeof src === 'string' ? src : '', window.location.href);\n  const shouldUseHLS = url.pathname.endsWith('.m3u8') && Hls.isSupported();\n  const hlsRef = useRef(shouldUseHLS ? new Hls({\n    ...hls\n  }) : null);\n  const videoRef = useRef(null);\n  const gl = useThree(state => state.gl);\n  const texture = suspend(() => new Promise((res, rej) => {\n    const video = Object.assign(document.createElement('video'), {\n      src: typeof src === 'string' && src || undefined,\n      srcObject: src instanceof MediaStream && src || undefined,\n      crossOrigin,\n      loop,\n      muted,\n      ...rest\n    });\n    videoRef.current = video;\n\n    // hlsjs extension\n    if (typeof src === 'string') {\n      if (shouldUseHLS) {\n        const _hls = hlsRef.current;\n        if (_hls) {\n          _hls.attachMedia(video);\n          _hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n            _hls.loadSource(src);\n          });\n        }\n      } else {\n        video.src = src;\n      }\n    } else if (src instanceof MediaStream) {\n      video.srcObject = src;\n    }\n    const texture = new THREE.VideoTexture(video);\n    if ('colorSpace' in texture) texture.colorSpace = gl.outputColorSpace;else texture.encoding = gl.outputEncoding;\n    video.addEventListener(unsuspend, () => res(texture));\n  }), [src]);\n  useEffect(() => {\n    start && texture.image.play();\n    return () => {\n      if (hlsRef.current) {\n        hlsRef.current.destroy();\n        hlsRef.current = null;\n      }\n    };\n  }, [texture, start]);\n  return texture;\n}\nexport { useVideoTexture };","map":{"version":3,"names":["THREE","useRef","useEffect","useThree","suspend","Hls","useVideoTexture","src","props","unsuspend","start","crossOrigin","muted","loop","hls","rest","playsInline","url","URL","window","location","href","shouldUseHLS","pathname","endsWith","isSupported","hlsRef","videoRef","gl","state","texture","Promise","res","rej","video","Object","assign","document","createElement","undefined","srcObject","MediaStream","current","_hls","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","VideoTexture","colorSpace","outputColorSpace","encoding","outputEncoding","addEventListener","image","play","destroy"],"sources":["C:/Users/user/Desktop/Myportfolio/portfolio/MYpo/node_modules/@react-three/drei/core/useVideoTexture.js"],"sourcesContent":["import * as THREE from 'three';\nimport { useRef, useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport Hls from 'hls.js';\n\nfunction useVideoTexture(src, props) {\n  const {\n    unsuspend,\n    start,\n    crossOrigin,\n    muted,\n    loop,\n    hls,\n    ...rest\n  } = {\n    unsuspend: 'loadedmetadata',\n    crossOrigin: 'Anonymous',\n    muted: true,\n    loop: true,\n    start: true,\n    playsInline: true,\n    hls: {},\n    ...props\n  };\n  const url = new URL(typeof src === 'string' ? src : '', window.location.href);\n  const shouldUseHLS = url.pathname.endsWith('.m3u8') && Hls.isSupported();\n  const hlsRef = useRef(shouldUseHLS ? new Hls({\n    ...hls\n  }) : null);\n  const videoRef = useRef(null);\n  const gl = useThree(state => state.gl);\n  const texture = suspend(() => new Promise((res, rej) => {\n    const video = Object.assign(document.createElement('video'), {\n      src: typeof src === 'string' && src || undefined,\n      srcObject: src instanceof MediaStream && src || undefined,\n      crossOrigin,\n      loop,\n      muted,\n      ...rest\n    });\n    videoRef.current = video;\n\n    // hlsjs extension\n    if (typeof src === 'string') {\n      if (shouldUseHLS) {\n        const _hls = hlsRef.current;\n        if (_hls) {\n          _hls.attachMedia(video);\n          _hls.on(Hls.Events.MEDIA_ATTACHED, () => {\n            _hls.loadSource(src);\n          });\n        }\n      } else {\n        video.src = src;\n      }\n    } else if (src instanceof MediaStream) {\n      video.srcObject = src;\n    }\n    const texture = new THREE.VideoTexture(video);\n    if ('colorSpace' in texture) texture.colorSpace = gl.outputColorSpace;else texture.encoding = gl.outputEncoding;\n    video.addEventListener(unsuspend, () => res(texture));\n  }), [src]);\n  useEffect(() => {\n    start && texture.image.play();\n    return () => {\n      if (hlsRef.current) {\n        hlsRef.current.destroy();\n        hlsRef.current = null;\n      }\n    };\n  }, [texture, start]);\n  return texture;\n}\n\nexport { useVideoTexture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}