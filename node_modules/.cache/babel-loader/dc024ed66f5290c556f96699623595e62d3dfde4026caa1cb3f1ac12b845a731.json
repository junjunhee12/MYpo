{"ast":null,"code":"import * as React from 'react';\nimport { PerspectiveCamera } from 'three';\nimport { mergeRefs } from 'react-merge-refs';\nimport { motion } from '../render/motion.mjs';\nimport { useLayoutCamera } from './use-layout-camera.mjs';\nimport { extend } from '@react-three/fiber';\nextend({\n  PerspectiveCamera: PerspectiveCamera\n});\n/**\n * Adapted from https://github.com/pmndrs/drei/blob/master/src/core/PerspectiveCamera.tsx\n */\nconst LayoutCamera = React.forwardRef((props, ref) => {\n  const {\n    cameraRef\n  } = useLayoutCamera(props, size => {\n    const {\n      current: cam\n    } = cameraRef;\n    if (cam && !props.manual) {\n      cam.aspect = size.width / size.height;\n      cam.updateProjectionMatrix();\n    }\n  });\n  return React.createElement(motion.perspectiveCamera, Object.assign({\n    ref: mergeRefs([cameraRef, ref])\n  }, props));\n});\nexport { LayoutCamera };","map":{"version":3,"names":["React","PerspectiveCamera","mergeRefs","motion","useLayoutCamera","extend","LayoutCamera","forwardRef","props","ref","cameraRef","size","current","cam","manual","aspect","width","height","updateProjectionMatrix","createElement","perspectiveCamera","Object","assign"],"sources":["C:/Users/user/Desktop/Myportfolio/portfolio/MYpo/node_modules/framer-motion-3d/dist/es/components/LayoutCamera.mjs"],"sourcesContent":["import * as React from 'react';\nimport { PerspectiveCamera } from 'three';\nimport { mergeRefs } from 'react-merge-refs';\nimport { motion } from '../render/motion.mjs';\nimport { useLayoutCamera } from './use-layout-camera.mjs';\nimport { extend } from '@react-three/fiber';\n\nextend({ PerspectiveCamera: PerspectiveCamera });\n/**\n * Adapted from https://github.com/pmndrs/drei/blob/master/src/core/PerspectiveCamera.tsx\n */\nconst LayoutCamera = React.forwardRef((props, ref) => {\n    const { cameraRef } = useLayoutCamera(props, (size) => {\n        const { current: cam } = cameraRef;\n        if (cam && !props.manual) {\n            cam.aspect = size.width / size.height;\n            cam.updateProjectionMatrix();\n        }\n    });\n    return (React.createElement(motion.perspectiveCamera, Object.assign({ ref: mergeRefs([cameraRef, ref]) }, props)));\n});\n\nexport { LayoutCamera };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,iBAAiB,QAAQ,OAAO;AACzC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,MAAM,QAAQ,oBAAoB;AAE3CA,MAAM,CAAC;EAAEJ,iBAAiB,EAAEA;AAAkB,CAAC,CAAC;AAChD;AACA;AACA;AACA,MAAMK,YAAY,GAAGN,KAAK,CAACO,UAAU,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;EAClD,MAAM;IAAEC;EAAU,CAAC,GAAGN,eAAe,CAACI,KAAK,EAAGG,IAAI,IAAK;IACnD,MAAM;MAAEC,OAAO,EAAEC;IAAI,CAAC,GAAGH,SAAS;IAClC,IAAIG,GAAG,IAAI,CAACL,KAAK,CAACM,MAAM,EAAE;MACtBD,GAAG,CAACE,MAAM,GAAGJ,IAAI,CAACK,KAAK,GAAGL,IAAI,CAACM,MAAM;MACrCJ,GAAG,CAACK,sBAAsB,CAAC,CAAC;IAChC;EACJ,CAAC,CAAC;EACF,OAAQlB,KAAK,CAACmB,aAAa,CAAChB,MAAM,CAACiB,iBAAiB,EAAEC,MAAM,CAACC,MAAM,CAAC;IAAEb,GAAG,EAAEP,SAAS,CAAC,CAACQ,SAAS,EAAED,GAAG,CAAC;EAAE,CAAC,EAAED,KAAK,CAAC,CAAC;AACrH,CAAC,CAAC;AAEF,SAASF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}