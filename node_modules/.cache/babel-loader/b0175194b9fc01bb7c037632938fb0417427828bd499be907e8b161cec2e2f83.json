{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Myportfolio\\\\portfolio\\\\src\\\\contexts\\\\prContent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState, createContext } from \"react\";\n\n// context 객체 생성\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrContent = /*#__PURE__*/createContext();\nexport function PrContentProvider({\n  defaultValue = \"ko\",\n  children\n}) {\n  _s();\n  useEffect(() => {\n    const handleBeforeUnload = event => {\n      // 페이지를 닫을 때만 이벤트 처리\n      if (event) {\n        // 스토리지 값 삭제\n        localStorage.removeItem('about');\n        localStorage.removeItem('contact');\n        localStorage.removeItem('portfolio');\n        localStorage.removeItem('abfeaturesout');\n      }\n    };\n\n    // beforeunload 이벤트 리스너 등록\n    // window.addEventListener('beforeunload', handleBeforeUnload);\n\n    // 컴포넌트가 언마운트될 때 이벤트 리스너 제거\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행되도록 함\n\n  const [nav, setNav] = useState(false);\n  // const [content2 , setContent2] = useState(false)\n\n  const [jn, setJn] = useState(false);\n  const handleClick2 = () => {\n    setJn(true);\n    setAbout(false);\n    setContact(false);\n    setPortfolio(false);\n    setFeatures(false);\n    // setTimeout(()=>{\n    //   setContent2(true)\n    // },1200)\n  };\n  const [cardFlipped, setCardFlipped] = useState(false);\n  const [card1Clicked, setCard1Clicked] = useState(false);\n  const [footer, setFooter] = useState(false);\n  // const [about, setAbout] = useState(false);\n  const [about, setAbout] = useState(localStorage.getItem('about') === 'true');\n  const [contact, setContact] = useState(localStorage.getItem('contact') === 'true');\n  const [portfolio, setPortfolio] = useState(localStorage.getItem('portfolio') === 'true');\n  const [features, setFeatures] = useState(localStorage.getItem('features') === 'true');\n  useEffect(() => {\n    // about 상태가 변경될 때마다 로컬 스토리지에 저장\n    localStorage.setItem('about', about);\n  }, [about]); // about 상태가 변경될 때만 실행\n  useEffect(() => {\n    localStorage.setItem('contact', contact);\n  }, [contact]);\n  useEffect(() => {\n    localStorage.setItem('portfolio', portfolio);\n  }, [portfolio]);\n  useEffect(() => {\n    localStorage.setItem('features', features);\n  }, [features]);\n  // nav바 색깔 변환------------------------\n  const onClickAbout = () => {\n    setAbout(true);\n    setJn(false);\n    setContact(false);\n    setPortfolio(false);\n    // setContent2(false)\n    setFeatures(false);\n    setFooter(true);\n  };\n  // Contact 배경 변환\n  const onClickContact = () => {\n    setContact(true);\n    setAbout(false);\n    setJn(false);\n    setPortfolio(false);\n    // setContent2(false)\n    setFeatures(false);\n    setFooter(true);\n    // localStorage.removeItem('about')\n  };\n  const onClickPortfolio = () => {\n    setPortfolio(true);\n    setAbout(false);\n    setJn(false);\n    setContact(false);\n    // setContent2(false)\n    setFeatures(false);\n    setFooter(true);\n    // localStorage.removeItem('about')\n  };\n  const onClickFeatures = () => {\n    setFeatures(true);\n    setPortfolio(false);\n    setAbout(false);\n    setJn(false);\n    setContact(false);\n    // setContent2(false)\n    setFooter(true);\n  };\n\n  // 색깔 변환 끝 --------------------------\n  const onClick = () => {\n    if (!cardFlipped) {\n      setCard1Clicked(true);\n      setCardFlipped(true);\n    } else {\n      setCardFlipped(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(PrContent.Provider, {\n    value: {\n      nav,\n      setNav,\n      handleClick2,\n      // content2,\n      // setContent2,\n      cardFlipped,\n      setCardFlipped,\n      card1Clicked,\n      setCard1Clicked,\n      onClick,\n      onClickAbout,\n      onClickContact,\n      footer,\n      about,\n      setAbout,\n      jn,\n      contact,\n      portfolio,\n      onClickPortfolio,\n      features,\n      onClickFeatures\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(PrContentProvider, \"oknjagaUdrupSoq7nMh+m92bfLI=\");\n_c = PrContentProvider;\nexport { PrContent };\n\n// 커스텀 훅 제작 예정 구역?\nvar _c;\n$RefreshReg$(_c, \"PrContentProvider\");","map":{"version":3,"names":["React","useEffect","useState","createContext","jsxDEV","_jsxDEV","PrContent","PrContentProvider","defaultValue","children","_s","handleBeforeUnload","event","localStorage","removeItem","window","removeEventListener","nav","setNav","jn","setJn","handleClick2","setAbout","setContact","setPortfolio","setFeatures","cardFlipped","setCardFlipped","card1Clicked","setCard1Clicked","footer","setFooter","about","getItem","contact","portfolio","features","setItem","onClickAbout","onClickContact","onClickPortfolio","onClickFeatures","onClick","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Myportfolio/portfolio/src/contexts/prContent.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useState, createContext } from \"react\";\r\n\r\n// context 객체 생성\r\nconst PrContent = createContext();\r\n\r\nexport function PrContentProvider({ defaultValue = \"ko\", children }) {\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (event) => {\r\n      // 페이지를 닫을 때만 이벤트 처리\r\n      if (event) {\r\n        // 스토리지 값 삭제\r\n        localStorage.removeItem('about');\r\n        localStorage.removeItem('contact');\r\n        localStorage.removeItem('portfolio');\r\n        localStorage.removeItem('abfeaturesout');\r\n      }\r\n    };\r\n\r\n    // beforeunload 이벤트 리스너 등록\r\n    // window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    // 컴포넌트가 언마운트될 때 이벤트 리스너 제거\r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, []); // 빈 배열을 전달하여 컴포넌트가 마운트될 때 한 번만 실행되도록 함\r\n\r\n    const [nav, setNav] = useState(false)\r\n    // const [content2 , setContent2] = useState(false)\r\n    \r\n    const [jn, setJn] = useState(false);\r\n    const handleClick2 = () =>{\r\n      setJn(true)\r\n      setAbout(false)\r\n      setContact(false)\r\n      setPortfolio(false)\r\n      setFeatures(false)\r\n      // setTimeout(()=>{\r\n      //   setContent2(true)\r\n      // },1200)\r\n    }\r\n\r\n\r\n    const [cardFlipped, setCardFlipped] = useState(false);\r\n    const [card1Clicked, setCard1Clicked] = useState(false);\r\n    const [footer, setFooter] = useState(false)\r\n    // const [about, setAbout] = useState(false);\r\n    const [about, setAbout] = useState(localStorage.getItem('about') === 'true');\r\n    const [contact, setContact] = useState(localStorage.getItem('contact') === 'true');\r\n    const [portfolio, setPortfolio] = useState(localStorage.getItem('portfolio') === 'true');\r\n    const [features, setFeatures] = useState(localStorage.getItem('features') === 'true');\r\n\r\n    useEffect(() => {\r\n        // about 상태가 변경될 때마다 로컬 스토리지에 저장\r\n        localStorage.setItem('about', about);\r\n    }, [about]); // about 상태가 변경될 때만 실행\r\n    useEffect(() => {\r\n        localStorage.setItem('contact', contact);\r\n    }, [contact]); \r\n    useEffect(() => {\r\n        localStorage.setItem('portfolio', portfolio);\r\n    }, [portfolio]); \r\n    useEffect(() => {\r\n        localStorage.setItem('features', features);\r\n    }, [features]); \r\n    // nav바 색깔 변환------------------------\r\n    const onClickAbout = () =>{\r\n      setAbout(true)\r\n      setJn(false)\r\n      setContact(false)\r\n      setPortfolio(false)\r\n      // setContent2(false)\r\n      setFeatures(false)\r\n      setFooter(true)\r\n  }\r\n  // Contact 배경 변환\r\n    const onClickContact = () =>{\r\n      setContact(true)\r\n      setAbout(false)\r\n      setJn(false)\r\n      setPortfolio(false)\r\n      // setContent2(false)\r\n      setFeatures(false)\r\n      setFooter(true)\r\n      // localStorage.removeItem('about')\r\n  }\r\n    const onClickPortfolio = () =>{\r\n      setPortfolio(true)\r\n      setAbout(false)\r\n      setJn(false)\r\n      setContact(false)\r\n      // setContent2(false)\r\n      setFeatures(false)\r\n      setFooter(true)\r\n      // localStorage.removeItem('about')\r\n  }\r\n\r\n  const onClickFeatures = () =>{\r\n    setFeatures(true)\r\n    setPortfolio(false)\r\n      setAbout(false)\r\n      setJn(false)\r\n      setContact(false)\r\n      // setContent2(false)\r\n      setFooter(true)\r\n  }\r\n  \r\n  // 색깔 변환 끝 --------------------------\r\n    const onClick = () => {\r\n      if (!cardFlipped) {\r\n        setCard1Clicked(true); \r\n        setCardFlipped(true); \r\n      } else {\r\n        setCardFlipped(false); \r\n      }\r\n    };\r\n  return (\r\n    <PrContent.Provider\r\n      value={{\r\n        nav,\r\n        setNav,\r\n        handleClick2,\r\n        // content2,\r\n        // setContent2,\r\n        cardFlipped,\r\n        setCardFlipped,\r\n        card1Clicked,\r\n        setCard1Clicked,\r\n        onClick,\r\n        onClickAbout,\r\n        onClickContact,\r\n        footer,\r\n        about,\r\n        setAbout,\r\n        jn,\r\n        contact,\r\n        portfolio,\r\n        onClickPortfolio,\r\n        features,\r\n        onClickFeatures\r\n      }}\r\n    >\r\n      {children}\r\n    </PrContent.Provider>\r\n  );\r\n}\r\n\r\nexport { PrContent };\r\n\r\n// 커스텀 훅 제작 예정 구역?\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}