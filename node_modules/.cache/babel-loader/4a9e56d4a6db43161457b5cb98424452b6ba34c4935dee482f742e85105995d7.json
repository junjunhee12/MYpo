{"ast":null,"code":"import { isMotionValue } from 'framer-motion';\nconst axes = [\"x\", \"y\", \"z\"];\nconst valueMap = {\n  \"position-x\": \"x\",\n  \"position-y\": \"y\",\n  \"position-z\": \"z\",\n  \"rotation-x\": \"rotateX\",\n  \"rotation-y\": \"rotateY\",\n  \"rotation-z\": \"rotateZ\",\n  \"scale-x\": \"scaleX\",\n  \"scale-y\": \"scaleY\",\n  \"scale-z\": \"scaleZ\"\n};\nconst scrapeMotionValuesFromProps = (props, prevProps) => {\n  const motionValues = {};\n  for (const key in props) {\n    const prop = props[key];\n    if (isMotionValue(prop) || isMotionValue(prevProps[key])) {\n      motionValues[valueMap[key] || key] = prop;\n    } else if (Array.isArray(prop)) {\n      for (let i = 0; i < prop.length; i++) {\n        const value = prop[i];\n        if (isMotionValue(value) || Array.isArray(prevProps[key]) && isMotionValue(prevProps[key][i])) {\n          const name = valueMap[key + \"-\" + axes[i]];\n          motionValues[name] = value;\n        }\n      }\n    }\n  }\n  return motionValues;\n};\nexport { scrapeMotionValuesFromProps };","map":{"version":3,"names":["isMotionValue","axes","valueMap","scrapeMotionValuesFromProps","props","prevProps","motionValues","key","prop","Array","isArray","i","length","value","name"],"sources":["C:/Users/user/Desktop/Myportfolio/portfolio/MYpo/node_modules/framer-motion-3d/dist/es/render/utils/scrape-motion-value.mjs"],"sourcesContent":["import { isMotionValue } from 'framer-motion';\n\nconst axes = [\"x\", \"y\", \"z\"];\nconst valueMap = {\n    \"position-x\": \"x\",\n    \"position-y\": \"y\",\n    \"position-z\": \"z\",\n    \"rotation-x\": \"rotateX\",\n    \"rotation-y\": \"rotateY\",\n    \"rotation-z\": \"rotateZ\",\n    \"scale-x\": \"scaleX\",\n    \"scale-y\": \"scaleY\",\n    \"scale-z\": \"scaleZ\",\n};\nconst scrapeMotionValuesFromProps = (props, prevProps) => {\n    const motionValues = {};\n    for (const key in props) {\n        const prop = props[key];\n        if (isMotionValue(prop) || isMotionValue(prevProps[key])) {\n            motionValues[valueMap[key] || key] = prop;\n        }\n        else if (Array.isArray(prop)) {\n            for (let i = 0; i < prop.length; i++) {\n                const value = prop[i];\n                if (isMotionValue(value) ||\n                    (Array.isArray(prevProps[key]) &&\n                        isMotionValue(prevProps[key][i]))) {\n                    const name = valueMap[key + \"-\" + axes[i]];\n                    motionValues[name] = value;\n                }\n            }\n        }\n    }\n    return motionValues;\n};\n\nexport { scrapeMotionValuesFromProps };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,eAAe;AAE7C,MAAMC,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAMC,QAAQ,GAAG;EACb,YAAY,EAAE,GAAG;EACjB,YAAY,EAAE,GAAG;EACjB,YAAY,EAAE,GAAG;EACjB,YAAY,EAAE,SAAS;EACvB,YAAY,EAAE,SAAS;EACvB,YAAY,EAAE,SAAS;EACvB,SAAS,EAAE,QAAQ;EACnB,SAAS,EAAE,QAAQ;EACnB,SAAS,EAAE;AACf,CAAC;AACD,MAAMC,2BAA2B,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;EACtD,MAAMC,YAAY,GAAG,CAAC,CAAC;EACvB,KAAK,MAAMC,GAAG,IAAIH,KAAK,EAAE;IACrB,MAAMI,IAAI,GAAGJ,KAAK,CAACG,GAAG,CAAC;IACvB,IAAIP,aAAa,CAACQ,IAAI,CAAC,IAAIR,aAAa,CAACK,SAAS,CAACE,GAAG,CAAC,CAAC,EAAE;MACtDD,YAAY,CAACJ,QAAQ,CAACK,GAAG,CAAC,IAAIA,GAAG,CAAC,GAAGC,IAAI;IAC7C,CAAC,MACI,IAAIC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;MAC1B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QAClC,MAAME,KAAK,GAAGL,IAAI,CAACG,CAAC,CAAC;QACrB,IAAIX,aAAa,CAACa,KAAK,CAAC,IACnBJ,KAAK,CAACC,OAAO,CAACL,SAAS,CAACE,GAAG,CAAC,CAAC,IAC1BP,aAAa,CAACK,SAAS,CAACE,GAAG,CAAC,CAACI,CAAC,CAAC,CAAE,EAAE;UACvC,MAAMG,IAAI,GAAGZ,QAAQ,CAACK,GAAG,GAAG,GAAG,GAAGN,IAAI,CAACU,CAAC,CAAC,CAAC;UAC1CL,YAAY,CAACQ,IAAI,CAAC,GAAGD,KAAK;QAC9B;MACJ;IACJ;EACJ;EACA,OAAOP,YAAY;AACvB,CAAC;AAED,SAASH,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}